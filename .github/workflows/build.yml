name: Build Electron App

# 触发条件
on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]  # 当推送版本标签时触发
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 手动触发

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Build Application
      run: npm run build
      
    # Windows特定构建步骤
    - name: Build Windows Installer
      if: matrix.os == 'windows-latest'
      run: |
        npm run make -- --platform=win32 --arch=x64
        
    # macOS特定构建步骤  
    - name: Build macOS App
      if: matrix.os == 'macos-latest'
      run: |
        npm run make -- --platform=darwin --arch=x64
        npm run make -- --platform=darwin --arch=arm64
        
    # Linux特定构建步骤
    - name: Build Linux AppImage
      if: matrix.os == 'ubuntu-latest'
      run: |
        npm run make -- --platform=linux --arch=x64
        
    # 上传构建产物
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-app-${{ matrix.os }}
        path: |
          out/make/**/*
          !out/make/**/RELEASES
        retention-days: 7

  # 发布Job（仅在推送标签时执行）
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*.exe
          artifacts/**/*.dmg
          artifacts/**/*.AppImage
          artifacts/**/*.deb
          artifacts/**/*.rpm
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#   # 仅Windows构建的简化版本（如果你只需要Windows）
#   build-windows-only:
#     # 取消下面这行注释来启用仅Windows构建，同时注释掉上面的build job
#     # runs-on: windows-latest
#     if: false  # 设为true来启用此job，设为false来禁用
    
#     steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v4
      
#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18'
#         cache: 'npm'
        
#     - name: Install Dependencies
#       run: npm ci
      
#     - name: Build Application
#       run: npm run build
      
#     - name: Create Windows Installer
#       run: npm run make
      
#     - name: Upload Windows Artifacts
#       uses: actions/upload-artifact@v4
#       with:
#         name: windows-installer
#         path: |
#           out/make/squirrel.windows/**/*.exe
#           out/make/zip/win32/**/*.zip
#         retention-days: 30